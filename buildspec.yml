version: 0.2

phases:
  pre_build:
    commands:
      - echo Setting up environment variables...
      - export AWS_DEFAULT_REGION=ap-southeast-1
      - aws sts get-caller-identity --query Account --output text > /dev/null
      - PUBLIC_ECR_URI="public.ecr.aws/v1u7r8e9/anhduykd12/my-repo"
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Logging in to Amazon ECR Public...
      - aws ecr get-login-password | docker login --username AWS --password-stdin public.ecr.aws/v1u7r8e9/anhduykd12/my-repo
      - echo "PUBLIC_ECR_URI is ${PUBLIC_ECR_URI}"
      - echo "IMAGE_TAG is ${IMAGE_TAG}"

  build:
    commands:
      - echo "Building Docker image for backend with latest tag..."
      - docker build -t ${PUBLIC_ECR_URI}/myapp-backend:latest backend-python/.
      - docker tag ${PUBLIC_ECR_URI}/myapp-backend:latest ${PUBLIC_ECR_URI}/myapp-backend:${IMAGE_TAG}
      - echo "Building Docker image for frontend with latest tag..."
      - docker build -t ${PUBLIC_ECR_URI}/myapp-frontend:latest frontend-react/.
      - docker tag ${PUBLIC_ECR_URI}/myapp-frontend:latest ${PUBLIC_ECR_URI}/myapp-frontend:${IMAGE_TAG}

  post_build:
    commands:
      - echo "Pushing backend Docker images..."
      - docker push ${PUBLIC_ECR_URI}/myapp-backend:latest
      - docker push ${PUBLIC_ECR_URI}/myapp-backend:${IMAGE_TAG}
      - echo "Pushing frontend Docker images..."
      - docker push ${PUBLIC_ECR_URI}/myapp-frontend:latest
      - docker push ${PUBLIC_ECR_URI}/myapp-frontend:${IMAGE_TAG}
      - printf '{"Version":"1.0","BackendImageURI":"%s","FrontendImageURI":"%s"}' \
         "${PUBLIC_ECR_URI}/myapp-backend:${IMAGE_TAG}" "${PUBLIC_ECR_URI}/myapp-frontend:${IMAGE_TAG}" > imageDetail.json
      - echo "Docker image details saved to imageDetail.json"

artifacts:
  files:
    - imageDetail.json